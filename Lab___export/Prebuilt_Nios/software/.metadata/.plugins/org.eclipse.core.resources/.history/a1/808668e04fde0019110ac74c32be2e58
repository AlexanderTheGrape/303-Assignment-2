/*
 * "Hello World" example.
 *
 * This example prints 'Hello from Nios II' to the STDOUT stream. It runs on
 * the Nios II 'standard', 'full_featured', 'fast', and 'low_cost' example
 * designs. It runs with or without the MicroC/OS-II RTOS and requires a STDOUT
 * device in your system's hardware.
 * The memory footprint of this hosted application is ~69 kbytes by default
 * using the standard reference design.
 *
 * For a reduced footprint version of this template, and an explanation of how
 * to reduce the memory footprint for a given application, see the
 * "small_hello_world" template.
 *
 */

#include <stdio.h>
#include "sys/alt_alarm.h"
#include <altera_avalon_pio_regs.h>
#include <alt_types.h>
#include <system.h>
#include "sys/alt_irq.h"
#include <string.h>

#include "pacemaker.h"
#include "pacemaker.c"

#define AVI_Value 300
#define AEI_Value 800
#define PVARP_Value 50
#define VRP_Value 150
#define LRI_Value 950
#define URI_Value 900

alt_alarm AVI_timer;
alt_alarm PVARP_timer;
alt_alarm VRP_timer;
alt_alarm AEI_timer;
alt_alarm LRI_timer;
alt_alarm URI_timer;

unsigned int AVI_timeout = 0;
unsigned int PVARP_timeout = 0;
unsigned int VRP_timeout = 0;
unsigned int AEI_timeout = 0;
unsigned int LRI_timeout = 0;
unsigned int URI_timeout = 0;

unsigned int LEDbits = 0;

unsigned int buttonVal = 0;
//void * buttonContext = (void*) &uiButtonValue;
int pedNS_pressed = 0;
int pedEW_pressed = 0;



alt_u32 AVI_timer_ISR(void* context)
{
	AVI_timeout = 1;
	printf("AVI timed out");
	return 0;
}

alt_u32 PVARP_timer_ISR(void* context)
{
	PVARP_timeout = 1;
	printf("PVARP timed out");
	return 0;
}

alt_u32 VRP_timer_ISR(void* context)
{
	VRP_timeout = 1;
	printf("VRP timed out");
	return 0;
}

alt_u32 AEI_timer_ISR(void* context)
{
	AEI_timeout = 1;
	printf("AEI timed out");
	return 0;
}

alt_u32 LRI_timer_ISR(void* context)
{
	LRI_timeout = 1;
	printf("LRI timed out");
	return 0;
}

alt_u32 URI_timer_ISR(void* context)
{
	URI_timeout = 1;
	printf("URI timed out");
	return 0;
}

void init_buttons_pio(){
//	unsigned int uiButton = 0;
//
//	// clears the edge capture register
//	IOWR_ALTERA_AVALON_PIO_EDGE_CAP(KEYS_BASE, 0);
//
//	// enable interrupts for all buttons
//	IOWR_ALTERA_AVALON_PIO_IRQ_MASK(KEYS_BASE, 0x7);
//
//	// start the button isr
//	alt_irq_register(KEYS_IRQ, buttonContext, isr_control);

	buttonVal = IORD_ALTERA_AVALON_PIO_DATA("/dev/buttons");
}

int main()
{
	// Reset the scc
	Reset();

	// Set up the buttons
	init_buttons_pio();

	//

	// Start the AVI timer
	AVI_timeout = 0;
	alt_alarm_start(&AVI_timer, 1, AVI_timer_ISR, NULL);

	while(1)
	{
		buttonVal = IORD_ALTERA_AVALON_PIO_DATA(KEYS_BASE);
	}

//	void* Timercontext = 0;

//	alt_alarm_start(&URI_timer, URI_Value, URI_timer_ISR, Timercontext);

//  printf("Hello from Nios II!\n");

  return 0;
}
