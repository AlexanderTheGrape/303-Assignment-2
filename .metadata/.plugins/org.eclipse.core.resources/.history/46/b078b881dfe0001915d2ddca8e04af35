scchart Pacemaker1 {
  
	input signal VSense, ASense;
	input signal LRITO, VRPTO, URITO, AEITO, PVARPTO, AVITO;
	output signal VPace, APace;
	output signal AVI_start, LRI_start, VRP_start, AEI_start, PVARP_start, URI_start;
	output signal AVI_stop, LRI_stop, AEI_stop;
	
	initial state top {
		signal LRI_ex;
		signal VRP_ex;
		signal AVI_ex;
		signal URI_ex;
		signal PVARP_ex;
		signal AEI_ex;
		signal FilteredASense, FilteredVSense;
		signal URI_idle;

//------------VRP-----------------------		
		region VRP_timer:
			initial state idle 	--> cs1 with FilteredVSense
								--> cs1 with VPace;
			connector state cs1 --> timer with /VRP_start;
			state timer 		--> idle with VRPTO/VRP_ex;
								
		region VRP:
			initial state idle 				--> waitVRP with pre(VRP_start)
											--> idle with VSense / FilteredVSense;
			state waitVRP					--> idle with VRP_ex;
	
//------------LRI--------------------
		region LRI_timer:
			initial state idle	--> cs1 with FilteredVSense
								--> cs1 with VPace;
			connector state cs1 --> timer with /LRI_start;
			state timer			--> cs2 with FilteredVSense
								--> cs2 with VPace
								--> idle with LRITO / LRI_ex;
			connector state cs2 --> idle with / LRI_stop;
//			
//		region LRI:
//			initial state idle	--> waitLRI with LRI_start;
//			state waitLRI 		--> idle with LRI_stop
//								--> idle with pre(LRI_ex) / VPace;
////		
//---------------AVI-----------------
		region AVI_timer:
			initial state idle	--> cs1 with FilteredASense
								--> cs1 with APace;
			connector state cs1 --> timer with /AVI_start;
			state timer 		--> idle with AVITO / AVI_ex
								--> cs2 with FilteredVSense
								--> cs2 with VPace;
			connector state cs2 --> idle with /AVI_stop;
			
		region AVI:
		initial state idle	--> waitAVI with AVI_start;
		state waitAVI 		--> waitURI with AVI_ex
							--> idle with AVI_stop;
		state waitURI 		--> idle with pre(URI_idle) / VPace;
			
//-------------PVARP------------------								
		region PVARP_timer:
			initial state idle	--> cs1 with FilteredVSense
								--> cs1 with VPace;
			connector state cs1 --> timer with /PVARP_start;
			state timer 		--> idle with PVARPTO / PVARP_ex;
			
		region PVARP:
			initial state idle 				--> waitPVARP with PVARP_start
											--> idle with ASense / FilteredASense;
			state waitPVARP					--> idle with PVARP_ex;
		
//-------------AEI--------------------
		region AEI_timer:
			initial state idle	--> cs1 with FilteredVSense
								--> cs1 with VPace;
			connector state cs1 --> timer with /AEI_start;
			state timer 	   	--> cs2 with FilteredASense
								--> cs2 with APace
								--> idle with AEITO / AEI_ex;
			connector state cs2 --> idle with /AEI_stop;
		
		region AEI:
			initial state idle 	--> waitAEI with AEI_start;
			state waitAEI		--> idle with pre(AEI_stop)
								--> idle with pre(AEI_ex) / APace;  
							
//--------------URI------------------
		region URI_timer:
			initial state idle 	--> cs1 with FilteredVSense
								--> cs1 with VPace;
			connector state cs1 --> timer with /URI_start;
			state timer 		--> idle with URITO / URI_ex;
			
		region URI:
			initial state idle	--> waitURI with URI_start
								--> idle with /URI_idle;
			state waitURI		--> idle with URI_ex;
	};
	
}

//	region LRI:
//			initial state init				--> connectorState1 with FilteredVSense/VRP_start
//											--> connectorState1 with VPace/VRP_start;
//			connector state connectorState1 --> waitVRP with / LRI_start;
//			state waitVRP					--> waitLRI with VRP_ex;
//			state waitLRI					--> connectorState2 with pre(FilteredVSense)
//											--> connectorState2 with pre(VPace)
//											--> connectorState3 with LRI_ex;
//			connector state connectorState2 --> intState with / LRI_stop;
//			connector state connectorState3 --> intState with / VPace;
//			state intState					--> waitVRP with / LRI_start;

//		region AVI:
//			initial state idle				--> connectorState2 with FilteredASense
//											--> connectorState2 with APace;
//			connector state connectorState2 --> waitURI with / AVI_start;
//			state waitURI					--> idle with pre(FilteredVSense) / AVI_stop
//											--> waitVSense with URI_ex;
//			state waitVSense				--> connectorState1 with pre(FilteredVSense)
//											--> connectorState1 with VPace
//											--> connectorState1 with pre(AVI_ex) / VPace;
//			connector state connectorState1 --> idle with / AVI_stop;